name: omni-max
services:
    postgres:
        image: postgres:17
        env_file: .env.local
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports: ['${POSTGRES_PORT:-5432}:5432']
        volumes:
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
            interval: 5s
            timeout: 3s
            retries: 30

    redis:
        image: redis:7
        ports: ['6379:6379']
        env_file: .env.local
        command: ['redis-server', '--save', '', '--appendonly', 'no']
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 5s
            timeout: 3s
            retries: 30

    ollama:
        image: ollama/ollama:latest
        ports: ['11434:11434']
        volumes: ['ollama:/root/.ollama']
        healthcheck:
            test: ['CMD', 'curl', '-s', 'http://localhost:11434/api/tags']
            interval: 10s
            timeout: 5s
            retries: 30
        profiles: ['production']

    api:
        build:
            context: ./apps/api
            dockerfile: Dockerfile
        env_file: [.env]
        depends_on:
            postgres:
                condition: service_healthy
            redis:
                condition: service_healthy
        ports: ['3000:3000']
        profiles: ['production']

    crawler:
        build:
            context: ./apps/crawler
            dockerfile: Dockerfile
        env_file: [.env]
        depends_on:
            postgres:
                condition: service_healthy
        ports: ['8000:8000']
        profiles: ['production']

volumes:
    pgdata:
    ollama:
